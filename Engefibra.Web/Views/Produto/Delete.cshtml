@model Engefibra.Data.Models.Produto
@{
    ViewBag.Title = "Remover Produto";
}

<h2>Remover Produto: @Model.Nome</h2>
<h3>Você tem certeza que deseja fazer isto?</h3>

<div>
    <dl class="dl-horizontal">
        <dt>@Html.DisplayNameFor(model => model.Nome)</dt>
        <dd>@Html.DisplayFor(model => model.Nome)</dd>
        <dt>@Html.DisplayNameFor(model => model.Marca)</dt>
        <dd>@Html.DisplayFor(model => model.Marca)</dd>
        <dt>@Html.DisplayNameFor(model => model.Fornecedor)</dt>
        <dd>@Html.DisplayFor(model => model.Fornecedor)</dd>
        <dt>@Html.DisplayNameFor(model => model.Observacao)</dt>
        <dd>@Html.DisplayFor(model => model.Observacao)</dd>
        <dt>@Html.DisplayNameFor(model => model.Ativo)</dt>
        <dd>@Html.DisplayFor(model => model.Ativo)</dd>
        <dt>@Html.DisplayNameFor(model => model.DataCriacao)</dt>
        <dd>@Html.DisplayFor(model => model.DataCriacao)</dd>
        <dt>@Html.DisplayNameFor(model => model.DataAlteracao)</dt>
        <dd>@Html.DisplayFor(model => model.DataAlteracao)</dd>
    </dl>
    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()
        <div class="form-actions no-color">
            @if (Engefibra.Bll.EstoqueMovimento.GetSaldoAtualProduto(Model.Id) <= 0) 
            {
                <input type="submit" value="Remover" class="btn btn-default" />
            }
            else
            {
                <div class="alert alert-danger">
                    Você não pode remover um produto que possui movimentação positiva! Caso o mesmo realmente precise ser deletado, efetue uma movimentação de saída com a quantidade disponivel do mesmo, e após isto, remova o produto.
                </div>
            }
            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-primary" })
        </div>
    }
</div>
